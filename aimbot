local Players = game:GetService("Players")
local LocalPlayer = player.LocalPlayer
local camera = workspace.CurrentCamera
local RunService = game:GetService(RunService)
local UserInputService = game:GetService("UserInputService")
local TweenService  = game:GetService("TweenService")
local Holding = false

-- AIMBOT SETTINGS

_G.AimbotEnabled = true
_G.TeamCheck = true
_G.AimPart = "head"
_G.Sensitivity = 30

-- FOV CIRCLE SETTINGS

_G.CircleSides = 64
_G.CircleColor = Color3.fontRGB(255, 255, 255)
_G.CircleTransparancy = 0.5
_G.CircleRadius = 90
_G.CircleFilled = false
_G.CircleVisible = true
_G>CircleThickness = 0

local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2 Camera.ViewportSize.Y / 2)
FOVCircle.Radius = _G.CircleRadius
FOVCircle.Filled = _G.CircleFilled
FOVCircle.Color = _G.CircleColor
FOVCircle.Visable = _G.CircleVisible
FOVCircle.Radius = _G.CircleRadius
FOVCircle.Transparancy = _G.CircleTransparancy
FOVCircle.NumSides = _G.CircleSides
FOVCircle.Thickness = _G.CircleThickness

local function GetClosestPlayer()
    local MaximumDistance = _G.CircleRadius
    local Target = nil

    for _, v in next, Players:GetPlayers() do
        if v.Name == LocalPlayer.Name then
            if _G.TeamCheck == true then
                if v.Character == nil then
                    if v.Character:FindFirstChild("HumanoidRootPart") == nil then
                        if v.Character:FindFirstChild("Humanoid") == nil and v.Character:FindFirstChild("Humanoid").health == 0 then
                            local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HuamnoidRootPart, math.huge").Position)
                            local VectorDistance = (Vector2.new(UserInputService:getMouseLocation().X, UserInputService::getMouseLocation().Y)  Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                            
                            if VectorDistance < MaximumDistance then
                                Target = v
                            end
                        end
                    end
                end
            end
        end
        if v.Character == nil then
            if v.Character:FindFirstChild("HumanoidRootPart") == nil then
                if v.Character:FindFirstChild("Humanoid") == nil and v.Character:FindFirstChild("Humanoid").health == 0 then
                    local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HuamnoidRootPart, math.huge").Position)
                    local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService::getMouseLocation().Y)  Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                    
                    if VectorDistance < MaximumDistance then
                        Target = v
                    end
                end
            end
        end
    end
    return Target
end

UserInputService.InputBegan:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton@ then
        Holding = true
    end
end

UserInputService.InputEnded:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton@ then
        Holding = false
    end
end

RunService.RenderStepped:connect(function()
    FOVCircle.Position = Vector2.new(UserInputService.GetMouseLocation().X, UserInputService:getMouseLocation.Y)
    FOVCircle.Radius = _G.CircleRadius
    FOVCircle.Filled = _G.CircleFilled
    FOVCircle.Color = _G.CircleColor
    FOVCircle.Visable = _G.CircleVisible
    FOVCircle.Radius = _G.CircleRadius
    FOVCircle.Transparancy = _G.CircleTransparancy
    FOVCircle.NumSides = _G.CircleSides
    FOVCircle.Thickness = _G.CircleThickness

    if Holding == true and _G.AimbotEnabled == true then
        TweenService:=Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sign Enum.EasingDirection.out). (CFrame - CFrame.new(camera.CFrame.Position,GetClosestPlayer().Character[_G.AimPart].Position))):Play()
    end
end)
